@model CloudBasedRMS.View.Controllers.ViewModel.SaleBillViewModel
@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_LayoutNew.cshtml";
}
<div class="breadcrumbs ace-save-state" id="breadcrumbs">
    <ul class="breadcrumb">
        <li>
            <i class="ace-icon fa fa-home home-icon"></i>
            <a href="#">@Resource.Home</a>
        </li>
        <li class="active">@Resource.OrderingBilling</li>
        <li class="active">@Resource.SaleBill</li>
    </ul><!-- /.breadcrumb -->
</div>
<h2>@Resource.Create</h2>
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken() 
    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.SaleBillNo)
        <div class="form-group">
            @Html.LabelFor(model => model.SaleBillNo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.SaleBillNo, new { htmlAttributes = new { @class = "col-xs-10 col-sm-5", disabled = "disabled" } })
                @Html.ValidationMessageFor(model => model.SaleBillNo, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SaleBillDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.SaleBillDate, new { @class = "col-xs-10 col-sm-5", @id = "txtSaleBillDate", @placeholder = "dd/mm/yyyy" })
                @Html.ValidationMessageFor(model => model.SaleBillDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.EmployeeID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("EmployeeID", ViewBag.Employee as SelectList, new { @class = "col-xs-10 col-sm-5" })
                @Html.ValidationMessageFor(model => model.EmployeeID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.OrderMasterID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("OrderMasterID", ViewBag.OrderMaster as SelectList, new { @id = "ddlOrderMasterID", @class = "col-xs-10 col-sm-5" })
                @Html.ValidationMessageFor(model => model.OrderMasterID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CustomerID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("CustomerID", ViewBag.Customer as SelectList, new { @class = "col-xs-10 col-sm-5" })
                @Html.ValidationMessageFor(model => model.CustomerID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Amount, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Amount, new { htmlAttributes = new { @id = "txtAmount", @class = "col-xs-10 col-sm-5" , disabled = "disabled" } })
                @Html.ValidationMessageFor(model => model.Amount, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Tax, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Tax, new { htmlAttributes = new {@id="txtTax", @class = "col-xs-10 col-sm-5" } })
                @Html.ValidationMessageFor(model => model.Tax, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Discount, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Discount, new { htmlAttributes = new {@id="txtDiscount", @class = "col-xs-10 col-sm-5" } })
                @Html.ValidationMessageFor(model => model.Discount, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.NetAmount, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.NetAmount, new { htmlAttributes = new { @id = "txtNetAmount", @class = "col-xs-10 col-sm-5", disabled = "disabled" } })
                @Html.ValidationMessageFor(model => model.NetAmount, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label(Resource.Received, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
               <input type="text" class="col-xs-10 col-sm-5" id="txtreceived"/>
            </div>
        </div>

        <div class="form-group">
            @Html.Label(Resource.Change, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input type="text" id="txtchange" class="col-xs-10 col-sm-5" disabled="disabled"/>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="button" value="@Resource.Create" class="btn btn-success" id="btnClick"/>
            </div>
        </div>
    </div>
}
<div>
    @Html.ActionLink(Resource.BacktoList, "Index")
</div>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/assets/js/jquery-ui-1.12.1.min.js")
    <script type="text/javascript">
        var amt, taxamt, disamt, netamt, receivedamt, changeamt;
        $("#txtSaleBillDate").datepicker({
            changeMonth: true,
            changeYear: true,
            yearRange: "-100:+0",
            dateFormat: 'mm/dd/yy'
        });
        $(document).ready(function () {
            getorderbill();
            $("#ddlOrderMasterID").change(function () {
                // this will call when FoodITem Dropdown select change
                getorderbill();
            });//end of cascading data bind method[order master id]
        });//end of document.ready fucntion
        $(document).ready(function () {
            //this calculates values automatically
            Calc();
            $("#txtTax, #txtDiscount,#txtreceived").on("keydown keyup", function () {
                Calc();
            });
        });
        //Automatically calculation function
        function Calc() {
            //get total amout
            amt = parseInt($("#txtAmount").val());
            //get deduction amt
            taxamt = parseInt($("#txtTax").val());
            disamt = parseInt($("#txtDiscount").val());
            //sum all deduction amt
            deductamt = taxamt + disamt;
            //get received amt
            receivedamt = parseInt($('#txtreceived').val());
            //subtract amt with deduction amt
            netamt = amt - deductamt;
            //subtract received amt with net amt
            changeamt = receivedamt - netamt;
            if (!isNaN(netamt)) {
                $("#txtNetAmount").val(netamt);
            }
            if (!isNaN(changeamt)) {
                $('#txtchange').val(changeamt);
            }
        }
        function getorderbill() {
            var OrderMasterID = $("#ddlOrderMasterID").val();
            if (ddlOrderMasterID != "") {
                var Amount = $("#txtAmount");
                $.ajax({
                    url: "@Url.Action("GettSaleBillbyOrderOrderMasterID", "SaleBill")",
                    type: "GET",
                    data: { 'OrderMasterID': OrderMasterID },
                    dataType: "json",
                    success: function (data) {
                        Amount.val(data);
                    },
                    error: function () {
                        Console.Log("Error")
                    }
                });
            }
        }//end of getorderbill
        $("#btnClick").click(function () {
            var SaleBillViewModel = {
                SaleBillNo: $('#@Html.IdFor(m=>m.SaleBillNo)').val(),
                SaleBillDate: $("#txtSaleBillDate").val(),
                EmployeeID: $('#@Html.IdFor(m=>m.EmployeeID)').val(),
                OrderMasterID: $("#ddlOrderMasterID").val(),
                CustomerID: $('#@Html.IdFor(m=>m.CustomerID)').val(),
                Amount: amt,
                Tax: taxamt,
                Discount: disamt,
                NetAmount: netamt
            }
            //We can store multiple set of Json data store in single variable as like below code in JQuery.
            var viewmodel = {
                "viewmodel": SaleBillViewModel
            }
            $.ajax({
                type: "POST",
                url: "@Url.Action("Create", "SaleBill")",
                data: viewmodel,
                datatype: "json",
                cache: false,
                success: function (json) {
                    if (json.isRedirect) {
                        window.location.href = json.redirectUrl;
                    }

                },
                error: function (xhr) {
                    alert('No Valid Data');
                }
            });
        });
</script>
}