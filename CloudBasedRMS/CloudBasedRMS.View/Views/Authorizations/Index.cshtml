@using PagedList;
@using PagedList.Mvc;
@model IPagedList< CloudBasedRMS.Core.Authorizations>
@{
    ViewBag.Title = "Authorization";
    Layout = "~/Views/Shared/_LayoutNew.cshtml";
    @*search Option Here*@
var searchbyList = new List<SelectListItem>()
    {
        new SelectListItem { Text="ControllerName", Value = "ControllerName" },
        new SelectListItem { Text="ActionName",Value = "ActionName" },
        new SelectListItem { Text="RoleName",Value = "RoleName" },
        new SelectListItem { Text="AllowOrDeny",Value = "AllowOrDeny" },
        new SelectListItem { Text="UseLog",Value = "UseLog" },
        new SelectListItem { Text="CreatedUserName",Value = "CreatedUserName" },
        new SelectListItem { Text="CreatedDate",Value = "CreatedDate" }
    };
}
<div class="breadcrumbs ace-save-state" id="breadcrumbs">
    <ul class="breadcrumb">
        <li>
            <i class="ace-icon fa fa-home home-icon"></i>
            <a href="#">@Resource.Home</a>
        </li>
        <li>
            <a href="#">@Resource.AdminSetUp</a>
        </li>
        <li class="active">@Resource.Authorization</li>
    </ul><!-- /.breadcrumb -->
</div>
@*Searching Result*@
@if (!string.IsNullOrEmpty(ViewBag.SearchBy) && !string.IsNullOrEmpty(ViewBag.Search))
{
    <div class="alert alert-success">

        <ul>
            <li><label>Search By : @ViewBag.SearchBy</label></li>
            <li><label>Search Value : @ViewBag.Search</label></li>
        </ul>
    </div>
}
    @*Searching Status*@
    @if ((!string.IsNullOrEmpty(ViewBag.Searchby1) && !string.IsNullOrEmpty(ViewBag.Search1)) ||
                 (!string.IsNullOrEmpty(ViewBag.Searchby2) && !string.IsNullOrEmpty(ViewBag.Search2)) ||
                 (!string.IsNullOrEmpty(ViewBag.Searchby3) && !string.IsNullOrEmpty(ViewBag.Search3)) ||
                 (!string.IsNullOrEmpty(ViewBag.Searchby4) && !string.IsNullOrEmpty(ViewBag.Search4)))
    {
        <div class="alert alert-success">
            <ul>

                @if (!string.IsNullOrEmpty(ViewBag.Searchby1) && !string.IsNullOrEmpty(ViewBag.Search1))
                {
                    <li>Search by @ViewBag.Searchby1 : @ViewBag.Search1</li>
                }

                @if (!string.IsNullOrEmpty(ViewBag.Searchby2) && !string.IsNullOrEmpty(ViewBag.Search2))
                {
                    <li>Search by @ViewBag.Searchby2 : @ViewBag.Search2</li>
                }

                @if (!string.IsNullOrEmpty(ViewBag.Searchby3) && !string.IsNullOrEmpty(ViewBag.Search3))
                {
                    <li>Search by @ViewBag.Searchby3 : @ViewBag.Search3</li>
                }

                @if (!string.IsNullOrEmpty(ViewBag.Searchby4) && !string.IsNullOrEmpty(ViewBag.Search4))
                {
                    <li>Search by @ViewBag.Searchby4 : @ViewBag.Search4</li>
                }

            </ul>
        </div>
    }

    @*Searching Panel*@
    @using (Html.BeginForm("Index", "Authorizations", FormMethod.Get))
    {
        <div class="panel panel-default">
            <div class="panel-heading">
                <a id="filter"><strong>@Resource.Filter</strong></a> <span id="filterspan" class="glyphicon glyphicon-chevron-down"></span>
                | @Html.ActionLink(Resource.Reload, "Index")
            </div>
            <div id="filtercollapse" style="display:none;" class="panel-body">
                <div class="row">
                    <div class="col-sm-3">
                        <div class="form-group">
                            @Html.Label(Resource.SearchBy)
                            @Html.DropDownList("searchby1", searchbyList, "-- Select One --", new { @class = "form-control", id = "searchby" })
                        </div>
                        <div class="form-group">
                            @Html.TextBox("search1", string.Empty, new { @class = "form-control" })
                        </div>
                    </div>
                    <div class="col-sm-3">
                        <div class="form-group">
                            @Html.Label(Resource.SearchBy)
                            @Html.DropDownList("searchby2", searchbyList, "-- Select One --", new { @class = "form-control", id = "searchby" })
                        </div>
                        <div class="form-group">
                            @Html.TextBox("search2", string.Empty, new { @class = "form-control" })
                        </div>
                    </div>
                    <div class="col-sm-3">
                        <div class="form-group">
                            @Html.Label(Resource.SearchBy)
                            @Html.DropDownList("searchby3", searchbyList, "-- Select One --", new { @class = "form-control", id = "searchby" })
                        </div>
                        <div class="form-group">
                            @Html.TextBox("search3", string.Empty, new { @class = "form-control", id = "searchby" })
                        </div>
                    </div>
                    <div class="col-sm-3">
                        <div class="form-group">
                            @Html.Label(Resource.SearchBy)
                            @Html.DropDownList("searchby4", searchbyList, "-- Select One --", new { @class = "form-control" })
                        </div>
                        <div class="form-group">
                            @Html.TextBox("search4", string.Empty, new { @class = "form-control" })
                        </div>
                    </div>
                </div>

                <input type="submit" value="@Resource.Search" class="btn btn-success" />

            </div>
        </div>
    }
    <p>@Html.ActionLink(Resource.CreateManually, "Create") | @Html.ActionLink(Resource.CreateAutoProcess, "Add") </p>
    @using (Html.BeginForm("Index", "Authorizations", FormMethod.Post))
    {
        <table class="table table-hover table-responsive">
            <tr>
                <th>Action</th>
                <th>
                    @Html.ActionLink("ControllerName", "index", new { sortby = ViewBag.ControllerSortby, searchby1 = Request.QueryString["searchby1"], search1 = Request.QueryString["search1"], searchby2 = Request.QueryString["searchby2"], search2 = Request.QueryString["search2"], searchby3 = Request.QueryString["searchby3"], search3 = Request.QueryString["search3"], searchby4 = Request.QueryString["searchby4"], search4 = Request.QueryString["search4"] })
                </th>
                <th>
                    @Html.ActionLink("ActionName", "index", new { sortby = ViewBag.ActionSortby, searchby1 = Request.QueryString["searchby1"], search1 = Request.QueryString["search1"], searchby2 = Request.QueryString["searchby2"], search2 = Request.QueryString["search2"], searchby3 = Request.QueryString["searchby3"], search3 = Request.QueryString["search3"], searchby4 = Request.QueryString["searchby4"], search4 = Request.QueryString["search4"] })
                </th>
                <th>
                    @Html.ActionLink("Role Name", "index", new { sortby = ViewBag.RoleSortby, searchby1 = Request.QueryString["searchby1"], search1 = Request.QueryString["search1"], searchby2 = Request.QueryString["searchby2"], search2 = Request.QueryString["search2"], searchby3 = Request.QueryString["searchby3"], search3 = Request.QueryString["search3"], searchby4 = Request.QueryString["searchby4"], search4 = Request.QueryString["search4"] })
                </th>
                <th>
                    @Html.Label("Created UserName")
                </th>
                <th>
                    <input type="checkbox" id="chkAllowHeader" /> @Html.DisplayNameFor(model => model.First().IsAllow)
                </th>
                <th>
                    <input type="checkbox" id="chkLogHeader"/> @Html.DisplayNameFor(model => model.First().IsUseLog)
                </th>
               
            </tr>
            @for (var i = 0; i < Model.Count; i++)
            {
                <tr>
                    <td>
    <a href="@Url.Action("Edit", "Authorizations", new {  id = Model[i].AuthorizationsID })" class="tooltip-success wow slideInDown" data-wow-duration="2s" data-rel="tooltip" title="Edit">
        <span class="green">
            <i class="ace-icon fa fa-pencil-square-o bigger-120"></i>
        </span>
    </a>
    |
    <a href="@Url.Action("Delete", "Authorizations", new { id = Model[i].AuthorizationsID})" class="tooltip-error wow slideInDown" data-wow-duration="2s" data-rel="tooltip" title="Delete">
        <span class="red">
            <i class="ace-icon fa fa-trash-o bigger-120"></i>
        </span>
    </a>

</td>
                    <td>
                        @Html.DisplayFor(x => x[i].ControllerName)
                        @Html.HiddenFor(x => x[i].AuthorizationsID)
                        @Html.HiddenFor(x => x[i].ControllerName)
                    </td>
                    <td>
                        @Html.DisplayFor(x => x[i].ActionName)
                        @Html.HiddenFor(x => x[i].ActionName)
                    </td>
                    <td>
                        @Html.DisplayFor(x => x[i].ApplicationRole.Name)
                        @Html.HiddenFor(x => x[i].ApplicationRole.Name)
                    </td>
                    <td>
                        @Html.DisplayFor(x => x[i].CreatedUser.UserName)
                        @Html.HiddenFor(x => x[i].CreatedUser.UserName)
                    </td>
                    <td>
                        @Html.CheckBoxFor(x => x[i].IsAllow, new { @class ="chkAllow" })
                        @Html.HiddenFor(x => x[i].IsAllow)
                    </td>
                    <td>
                        @Html.CheckBoxFor(x => x[i].IsUseLog, new { @class = "chkLog" })
                        @Html.HiddenFor(x => x[i].IsUseLog)
                    </td>
                    
                </tr>
            }
        </table>
        <input type="submit" id="btnSave" class="btn btn-success wow fadeIn" data-wow-duration="3s" value="Save" />
    }
    @*Confirmation DialogBox*@
    <div id="confirm" class="modal fade" role="dialog" style="margin-left:30%;margin-right:30%;margin-top:5%;overflow:hidden;">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4>Confirmation</h4>
            </div>
            <div class="modal-body">
                <h4>Are you sure want to save?</h4>
            </div>
            <div class="modal-footer">
                <input type="submit" data-dismiss="modal" id="btnOk" class="btn btn-success" value="Confirm" />
                <input type="submit" data-dismiss="modal" id="btnCancel" class="btn btn-danger" value="Cancel" />
            </div>
        </div>
    </div>
    @*End Confirmation DialogBox*@
    @Html.PagedListPager(Model,
    page => Url.Action("Index", new { searchby1 = Request.QueryString["searchby1"], search1 = Request.QueryString["search1"], searchby2 = Request.QueryString["searchby2"], search2 = Request.QueryString["search2"], searchby3 = Request.QueryString["searchby3"], search3 = Request.QueryString["search3"], searchby4 = Request.QueryString["searchby4"], search4 = Request.QueryString["search4"], sortby = Request["sortby"], page }),
    new PagedListRenderOptions { Display = PagedListDisplayMode.IfNeeded, DisplayItemSliceAndTotal = true })

    <style type="text/css">
        #filter {
        }

            #filter:hover {
                cursor: pointer;
            }

        #filterspan {
            padding-left: 1px;
            padding-right: 1px;
        }
    </style>
<script src="~/assets/js/jquery-1.12.4.min.js"></script>
    <script type="text/javascript">
        $(document).ready()
        {
            //style for checkbox
            $('input[type="checkbox"]').css('cursor', 'pointer');

            //allow checkbox header click event
            $('#chkAllowHeader').change(function () {
                var checkstatus = this.checked;
                
                $('.chkAllow').each(function () {

                    this.checked = checkstatus;
                });
            });
            
            //allowcheck click event
            $('.chkAllow').on('change', function (e) {
                $('#chkAllowHeader').prop('checked', false);
            });

            //UseLog header checkbox change event
            $('#chkLogHeader').change(function () {
                var checkstatus = this.checked;
                $('.chkLog').each(function () {
                    this.checked = checkstatus;
                });
            });

            //UseLog checkbox change event
            $('.chkLog').on('change', function () {
                $('#chkLogHeader').prop('checked', false);
            });

            //Save Button Click Event => Show Confirmation Dialog
            $('#btnSave').on('click', function (e) {
                var $form = $(this).closest('form');
                e.preventDefault();

                $('#confirm').modal({
                    backdrop: 'static',
                    keyboard: false
                }).one('click', '#btnOk', function (e) {
                    $form.trigger('submit');
                });
            });
            //End Save Button Click Event => Show Confirmation Dialog

            $('select').val('');
            $('input[type="text"]').val('');

            //Searchby Dropdown Change Event
            $('select').change(function () {

                //currenc select value
                var value = $(this).val();
                //current select name
                var search = $(this).attr('name');
                //convert to search textbox name
                search = search.replace('searchby', 'search');

                if (value == '' || value == null || value == undefined) {
                    $('input[name="' + search + '"]').val('');
                }

                if (value == 'CreatedDate') {

                   // var regex = "\\d[1-12]{1,2}/\\d[1-31]{1,2}/\\d{4}";
                   // $('input[name="' + search + '"]').attr('placeholder', 'MM/DD/YYYY');
                   // $('input[name="' + search + '"]').attr('pattern', regex);
                    $('input[name="' + search + '"]').attr('type', 'Date');
                }
                else {
                   // $('input[name="' + search + '"]').removeAttr('placeholder');
                   // $('input[name="' + search + '"]').removeAttr('pattern');
                    $('input[name="' + search + '"]').attr('type', 'text');
                }

            });

            $('#filter').on('click', function () {

                if ($('#filterspan').hasClass('glyphicon glyphicon-chevron-down')) {

                    $('#filterspan').removeClass('glyphicon glyphicon-chevron-down');

                    $('#filterspan').addClass('glyphicon glyphicon-chevron-up');

                    $('#filtercollapse').css("display", "block");

                }
                else {

                    $('#filterspan').removeClass('glyphicon glyphicon-chevron-up');

                    $('#filterspan').addClass('glyphicon glyphicon-chevron-down');

                    $('#filtercollapse').css("display", "none");

                }
            })
        }
    </script>
<link href="~/Scripts/WOW-master/css/libs/animate.css" rel="stylesheet" />
<script src="~/Scripts/WOW-master/dist/wow.js"></script>
<script>
    wow = new WOW(
      {
        animateClass: 'animated',
        offset:       100,
        callback:     function(box) {
          console.log("WOW: animating <" + box.tagName.toLowerCase() + ">")
        }
      }
    );
    wow.init();
</script>
