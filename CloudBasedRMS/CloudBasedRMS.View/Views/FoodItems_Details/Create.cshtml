@model CloudBasedRMS.View.Controllers.ViewModel.FoodItems_DetailsViewModel

@{
    ViewBag.Title = Resource.Create;
    Layout = "~/Views/Shared/_LayoutNew.cshtml";
}
<div class="breadcrumbs ace-save-state" id="breadcrumbs">
    <ul class="breadcrumb">
        <li>
            <i class="ace-icon fa fa-home home-icon"></i>
            <a href="#">@Resource.Home</a>
        </li>
        <li class="active">@Resource.Menu</li>
        <li class="active">@Resource.FoodItemsDetails</li>
    </ul><!-- /.breadcrumb -->
</div>
@using (Html.BeginForm("Create", "FoodItems_Details", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Create</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">            
            @Html.LabelFor(model => model.Code, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Code, new { htmlAttributes = new { @class = "col-xs-10 col-sm-5" } })
                @Html.ValidationMessageFor(model => model.Code, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "col-xs-10 col-sm-5" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label(Resource.FoodItemPhoto, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <img id="user_img" height="150" width="150" style="border:solid" />
                <input type="file" title="search image" id="file" name="file" onchange="show(this)">
                @Html.ValidationMessageFor(model => model.ImagePath, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Rate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input name="Rate" data-rel="tooltip" type="text" id="txtRate" title="Food item rating skill!" data-placement="bottom" class="col-xs-10 col-sm-5"/>
                @Html.ValidationMessageFor(model => model.Rate, "", new { @class = "text-danger" })
                <span class="help-button" data-rel="popover" data-trigger="hover" data-placement="right" data-content="Rate means that your food item rated by customers.(MinValue:0.0,MaxValue:5.0)" title="what does it mean Rate?">?</span>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Offer, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Offer, new { htmlAttributes = new { @class = "col-xs-10 col-sm-5" } })
                @Html.ValidationMessageFor(model => model.Offer, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Note, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Note, new { htmlAttributes = new { @class = "col-xs-10 col-sm-5" } })
                @Html.ValidationMessageFor(model => model.Note, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.IsJam, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.IsJam)
                    @Html.ValidationMessageFor(model => model.IsJam, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Spicy, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Spicy, new { htmlAttributes = new { @class = "col-xs-10 col-sm-5" } })
                @Html.ValidationMessageFor(model => model.Spicy, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CategoryID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("CategoryID", ViewBag.Categories as SelectList, new { @class = "col-xs-10 col-sm-5" })
                @Html.ValidationMessageFor(model => model.CategoryID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.IsTodaySpecial, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.IsTodaySpecial)
                    @Html.ValidationMessageFor(model => model.IsTodaySpecial, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.OldPrice, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.OldPrice, new { htmlAttributes = new { @class = "col-xs-10 col-sm-5" } })
                @Html.ValidationMessageFor(model => model.OldPrice, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.NewPrice, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.NewPrice, new { htmlAttributes = new { @class = "col-xs-10 col-sm-5" } })
                @Html.ValidationMessageFor(model => model.NewPrice, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.KitchenID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("KitchenID", ViewBag.Kitchen as SelectList, new { @class = "col-xs-10 col-sm-5" })
                @Html.ValidationMessageFor(model => model.KitchenID, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="@Resource.Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}
<div>
    @Html.ActionLink(Resource.BacktoList, "Index")
</div>
<script src="~/Scripts/jquery-1.12.4.min.js"></script>
<script src="~/assets/js/jquery-ui-1.12.1.min.js"></script>
    <script type="text/javascript">
        function show(input) {
            if (input.files && input.files[0]) {
                var filerdr = new FileReader();
                filerdr.onload = function (e) {
                    $('#user_img').attr('src', e.target.result);
                }
                filerdr.readAsDataURL(input.files[0]);
            }
        }
        $(document).ready(function () {
        $('[data-rel=tooltip]').tooltip({ container: 'body' });
        $('[data-rel=popover]').popover({ container: 'body' });
        });    
    </script>
