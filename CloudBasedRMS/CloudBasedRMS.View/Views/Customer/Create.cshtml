@model CloudBasedRMS.View.Controllers.ViewModel.CustomerViewModel
@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_LayoutNew.cshtml";
}
<div class="breadcrumbs ace-save-state" id="breadcrumbs">
    <ul class="breadcrumb">
        <li>
            <i class="ace-icon fa fa-home home-icon"></i>
            <a href="#">Menu</a>
        </li>
        <li>
            <a href="#">Customer</a>
        </li>
        <li class="active">Create</li>
    </ul><!-- /.breadcrumb -->
</div>
<h4>Create</h4>
@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()    
    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "col-xs-10 col-sm-5" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "col-xs-10 col-sm-5" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.AddressID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("AddressID", ViewBag.Address as SelectList, new { @class = "col-xs-10 col-sm-5" })
                @Html.ValidationMessageFor(model => model.AddressID, "", new { @class = "text-danger" })
                <a class="glyphicon-plus btn btn-sm" title="Create New Address" data-toggle="modal" data-target="#dialogNewAddress"></a>   
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PhoneNo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PhoneNo, new { htmlAttributes = new { @class = "col-xs-10 col-sm-5" } })
                @Html.ValidationMessageFor(model => model.PhoneNo, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.MobileNo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.MobileNo, new { htmlAttributes = new { @class = "col-xs-10 col-sm-5" } })
                @Html.ValidationMessageFor(model => model.MobileNo, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Note, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Note, new { htmlAttributes = new { @class = "col-xs-10 col-sm-5" } })
                @Html.ValidationMessageFor(model => model.Note, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}
<div>
    @Html.ActionLink("Back to List", "Index")
</div>
@*Create AddressDialogBox*@
<div id="dialogNewAddress" class="modal fade" role="dialog" style="margin-left:35%;margin-right:35%;margin-top:1%;overflow:hidden;">
    <div class="modal-content">
        <div class="modal-header">
            <button type="button" class="close" data-dismiss="modal">&times;</button>
            <h4 id="dialogHeader">Create New Address</h4>
        </div>
        <div class="modal-body">
            <span id="lblMessage" style="color:dodgerblue;font-weight:bold;"></span>
            <div class="form-group">
                @Html.Label("City")
                @Html.TextBox("City", string.Empty, new { @class = "form-control", id = "txtCity", required = "required" })
                <span id="errorCity" style="color:red;font-weight:bold;"></span>
            </div>
            <div class="form-group">
                @Html.Label("Township")
                @Html.TextBox("Township", string.Empty, new { @class = "form-control", id = "txtTownship", required = "required" })
                <span id="errorTownship" style="color:red;font-weight:bold;"></span>
            </div>
            <div class="form-group">
                @Html.Label("Place")
                @Html.TextBox("Place", string.Empty, new { @class = "form-control", id = "txtPlace", required = "required" })
                <span id="errorPlace" style="color:red;font-weight:bold;"></span>
            </div>
            <div class="form-group">
                @Html.Label("ZipCode")
                @Html.TextBox("ZipCode", string.Empty, new { @class = "form-control", id = "txtZipCode", required = "required" })
                <span id="errorZipCode" style="color:red;font-weight:bold;"></span>
            </div>
            <div class="form-group">
                @Html.Label("Area")
                @Html.TextArea("Area", string.Empty, new { @class = "form-control", id = "txtArea", required = "required" })
                <span id="errorArea" style="color:red;font-weight:bold;"></span>
            </div>
            <input id="btnCreateAddress" type="submit" class="btn btn-success" value="Create" />
            <input id="btnCancel"type="submit" class="btn btn-danger" value="Cancel" data-dismiss="modal" />
        </div>
    </div>
</div>
<script src="~/Scripts/jquery-1.12.4.min.js"></script>
<script src="~/assets/js/jquery-ui-1.12.1.min.js"></script>
@*<script src="~/Scripts/material-charts/js/ripple.js"></script>
    <script src="~/Scripts/material-charts/js/demo.js"></script>
    <link href="~/Scripts/material-charts/css/ripple.css" rel="stylesheet" />*@
<script type="text/javascript">
    //saving adddress record function
    var city,township,place,zipcode,area
    //Create Button Click Event
    $('#btnCreateAddress').click(function () {
        //BindEntity
        BindAddressEntity();
        //check validation
        if (ValidationAddressRecord()) {
            //Call Ajax Post Function
            CreateAddressRecord();
        }
        else {
            //Set Error Message
            $('#errorCity').text("Require City.");
            $('#errorTownship').text("Require Township.");
            $('#errorPlace').text("Require Place.");
            $('#errorZipCode').text("Require Zip Code.");
            $('#errorArea').text("Require Area.");
        }
    });
    //validation for create ValidationRankRecord
    function ValidationAddressRecord() {
        if (city == '' || city == null || city == undefined) {
            return false;
        }
        else if (township == '' || township == null || township == undefined) {
            return false;
        }
        else if (place == '' || place == null || place == undefined) {
            return false;
        }
        else if (zipcode == '' || zipcode == null || zipcode == undefined) {
            return false;
        }
        else {
            return true;
        }
    }
    //end validation ValidationRankRecord
    //BindEntity
    function BindAddressEntity() {
        city = $('#txtCity').val();
        township = $('#txtTownship').val();
        place = $('#txtPlace').val();
        zipcode = $('#txtZipCode').val();
        area = $('#txtArea').val();

    }
    //Ajax Post Functin For RankRecord Create
    function CreateAddressRecord() {
        $.ajax({
            type: 'POST',
            dataType: 'JSON',
            url: "@Url.Action("CreateAddress", "Employee", FormMethod.Post)",
            data: { 'City':city,'Township':township,'Place':place,'ZipCode':zipcode,'Area':area },
            success: function (data) {
            if (data) {
            alert("New Address record create successfully!")
            window.location.reload();
            }
            else if (data == false) {
            $('#errorCity').text("City is already existed!");
            }
            else {
            $('#errorCity').text("An error occurred while processing your request.");
            }
            }
            });
    }
    $('#btnCancel').click(function () { ClearControl(); });
    function ClearControl() {
        $('#errorCity').text('');
        $('#errorPlace').text('');
        $('#errorZipCode').text('');
        $('#errorArea').text('');
        $('#txtCity').val('');
        $('#txtTownship').val('');
        $('#txtPlace').val('');
        $('#txtZipCode').val('');
        $('#txtArea').val('');
        $('#errorTownship').text('');
    }
    </script>